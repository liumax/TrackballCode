%This code is meant to use time periods delineated by signal pulses to
%separate out chunks of spike times. This will save these spike files in
%the master structure

%Inputs:
%s: master structure
%desigNames: names of units (1 x n)
%spikeNames: names for spike periods
%soundNames: names for sound periods

%Outputs: 
%s: master structure. Will include all spike data into the master structure
%under each unit, under the title 'SpikeTimes'

function [s] = functionPairingUDUSpikeSeparator(s,...
   desigNames,spikeNames,soundNames);
%First, I want to pull all the time periods.
timesBaseline = s.TimePeriods.Baseline;
timesTuningFirst1 = s.TimePeriods.(soundNames{1});
timesTuningSecond1 = s.TimePeriods.(soundNames{2});
timesPairing1 = s.TimePeriods.(soundNames{3});

timesTuningFirst2 = s.TimePeriods.(soundNames{4});
timesTuningSecond2 = s.TimePeriods.(soundNames{5});
timesPairing2 = s.TimePeriods.(soundNames{6});

timesTuningFirst3 = s.TimePeriods.(soundNames{7});
timesTuningSecond3 = s.TimePeriods.(soundNames{8});
timesPairing3 = s.TimePeriods.(soundNames{9});

%stores spikes as separated spike times. 
for i = 1:size(desigNames,2);
    s.(desigNames{i}).BaselineSpikes = ...
        s.(desigNames{i}).SpikeTimes(...
        s.(desigNames{i}).SpikeTimes>timesBaseline(1) &...
        s.(desigNames{i}).SpikeTimes<timesBaseline(2));
    s.(desigNames{i}).(spikeNames{1}) = ...
        s.(desigNames{i}).SpikeTimes(...
        s.(desigNames{i}).SpikeTimes>timesTuningFirst1(1) &...
        s.(desigNames{i}).SpikeTimes<timesTuningFirst1(2));
    s.(desigNames{i}).(spikeNames{2}) = ...
        s.(desigNames{i}).SpikeTimes(...
        s.(desigNames{i}).SpikeTimes>timesTuningSecond1(1) &...
        s.(desigNames{i}).SpikeTimes<timesTuningSecond1(2));
    s.(desigNames{i}).(spikeNames{3}) = ...
        s.(desigNames{i}).SpikeTimes(...
        s.(desigNames{i}).SpikeTimes>timesPairing1(1) &...
        s.(desigNames{i}).SpikeTimes<timesPairing1(2));
    
    s.(desigNames{i}).(spikeNames{4}) = ...
        s.(desigNames{i}).SpikeTimes(...
        s.(desigNames{i}).SpikeTimes>timesTuningFirst2(1) &...
        s.(desigNames{i}).SpikeTimes<timesTuningFirst2(2));
    s.(desigNames{i}).(spikeNames{5}) = ...
        s.(desigNames{i}).SpikeTimes(...
        s.(desigNames{i}).SpikeTimes>timesTuningSecond2(1) &...
        s.(desigNames{i}).SpikeTimes<timesTuningSecond2(2));
    s.(desigNames{i}).(spikeNames{6}) = ...
        s.(desigNames{i}).SpikeTimes(...
        s.(desigNames{i}).SpikeTimes>timesPairing2(1) &...
        s.(desigNames{i}).SpikeTimes<timesPairing2(2));
    
    s.(desigNames{i}).(spikeNames{7}) = ...
        s.(desigNames{i}).SpikeTimes(...
        s.(desigNames{i}).SpikeTimes>timesTuningFirst3(1) &...
        s.(desigNames{i}).SpikeTimes<timesTuningFirst3(2));
    s.(desigNames{i}).(spikeNames{8}) = ...
        s.(desigNames{i}).SpikeTimes(...
        s.(desigNames{i}).SpikeTimes>timesTuningSecond3(1) &...
        s.(desigNames{i}).SpikeTimes<timesTuningSecond3(2));
    s.(desigNames{i}).(spikeNames{9}) = ...
        s.(desigNames{i}).SpikeTimes(...
        s.(desigNames{i}).SpikeTimes>timesPairing3(1) &...
        s.(desigNames{i}).SpikeTimes<timesPairing3(2));
    
end


end
